syntax = "proto3";

package stables;

service StableService {
  // Correspond à getStables()
  rpc GetStables (Empty) returns (StableList) {}

  // Correspond à getStableById()
  rpc GetStableById (StableById) returns (Stable) {}

  // Correspond à createStable()
  rpc CreateStable (CreateStableRequest) returns (Stable) {}
}

message Empty {}

message StableById {
  string id = 1;
}

message Stable {
  string id = 1;
  string name = 2;
  string location = 3;
  optional string image = 4;
  optional string image_cover = 5;
  int32 pilotes = 6;
  int32 how_many_tournaments = 7;
  int32 how_many_wins = 8;
  int32 how_many_losses = 9;
  int32 total_points = 10;
  string created_at = 11; // Format ISO 8601
  string updated_at = 12; // Format ISO 8601
  repeated Pilote pilote = 13; // Liste des pilotes associés
}

message StableList {
  repeated Stable stables = 1;
}

message CreateStableRequest {
  string name = 1;
  string location = 2;
  optional string image = 3;
  optional string image_cover = 4;
}

// Message Pilote inclus car il fait partie de la relation
message Pilote {
  string id = 1;
  string name = 2;
  string stable_id = 3;
  int32 age = 4;
  string gender = 5;
  int32 best_chrono_time = 6;
  int32 pilote_number = 7;
  int32 points = 8;
}
